name: Django CI

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: 
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      meilisearch:
        image: getmeili/meilisearch:latest
        ports:
          - "7700:7700"
        env:
          MEILI_MASTER_KEY: "meilimasterkey"
        options: --health-cmd "wget -q localhost:7700/health -O /dev/null" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Run Tests
        env:
          SECRET_KEY: "69tgugtg%^fgJO&*^"
          DEBUG: False
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
          FRONTEND_BASE_URL: "http://localhost:3000"
          EMAIL_HOST: ""
          EMAIL_PORT: ""
          EMAIL_HOST_USER: ""
          EMAIL_HOST_PASSWORD: ""
          MEILI_URL: "http://localhost:7700"
          MEILI_MASTER_KEY: "meilimasterkey"
        run: |
          python ./manage.py test

      - name: Install Railway
        run: bash <(curl -fsSL cli.new)

      - name: Deploy
        run: railway up --service API
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
